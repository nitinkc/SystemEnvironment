#!/bin/bash
# Prevents accidental commits to defined Branches.
# Install: use copy_hooks.sh script to place the precommit file into all the Codes from Repo
# curl -fL -o .git/hooks/pre-commit https://raw.githubusercontent.com/nitinkc/SystemEnvironment/master/gitHooks/pre-commit
# chmod +x .git/hooks/pre-commit

SPECIAL_BRANCH='master|develop|main'
BUGFIX_REGEX=^[bR]+ugfix/[a-zA-Z]+[0-9]+$
RELEASE_REGEX=^[rR]+elease/[a-zA-Z]+[0-9]+$ #Could be Release/r16 or release/r16
CURRENT_BRANCH="$(git rev-parse --abbrev-ref HEAD)"
#'release/r16'

if [[ "$CURRENT_BRANCH" =~ (SPECIAL_BRANCH) ]]; then
  echo >&2 "Preventing commit on $CURRENT_BRANCH branch"
  echo >&2 "commit with -n switch to bypass the pre-commit hook."
  echo >&2 "Hooks at Repo would prevent push directly to such branch"
  exit 1
elif [[ "$CURRENT_BRANCH" =~ ($BUGFIX_REGEX) ]]; then
  echo >&2 "Preventing commit on $CURRENT_BRANCH branch. Commit with -n switch to bypass"
  exit 1
elif [[ "$CURRENT_BRANCH" =~ ($RELEASE_REGEX) ]]; then
  echo >&2 "Preventing commit on $CURRENT_BRANCH branch. Commit with -n switch to bypass"
  exit 1
fi

exit 0
